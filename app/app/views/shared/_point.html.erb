<div id="compass" class="css-compass">
  <div id="arrow"></div>
</div>
<div>
  <table class="point">
    <tr>
      <th></th>
      <th>瞬間値</th>
      <th>前１０分平均</th>
    </tr>
    <tr>
      <th>気温<br>(°C)</th>
      <td>28.1</td>
      <td>28.1</td>
    </tr>
    <tr>
      <th>湿度<br>(%)</th>
      <td>27.2</td>
      <td>22.1</td>
    </tr>
    <tr>
      <th>気圧<br>(hPa)</th>
      <td>1002.2</td>
      <td>3123.2</td>
    </tr>
  </table>
</div>
<div class="divide-two-tables">
  <table class="point">
    <tr>
      <th class="tbl2-th">雨量（日積算）<br>(mm)</th>
      <td class="tbl2-td">4.2</td>
    </tr>
  </table>
</div>

<script type="text/javascript">
  // var margin = {top: 20, right: 80, bottom: 30, left: 50};
  // var width = 860;
  // var height = 200;

  // var parseDate = d3.time.format("%Y%m%d").parse;

  // var x = d3.time.scale()
  //     .range([0, width]);

  // var y = d3.scale.linear()
  //     .range([height, 0]);

  // var color = d3.scale.category10();

  // var xAxis = d3.svg.axis()
  //     .scale(x)
  //     .orient("bottom");

  // var yAxis = d3.svg.axis()
  //     .scale(y)
  //     .orient("left");

  // var line = d3.svg.line()
  //     .interpolate("basis")
  //     .x(function(d) { return x(d.date); })
  //     .y(function(d) { return y(d.temperature); });

  // var svg = d3.select("#base").append("svg")
  //     .attr("width", width + margin.left + margin.right)
  //     .attr("height", height + margin.top + margin.bottom)
  //   .append("g")
  //     .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

  // d3.csv("food.csv", function(error, data) {
  //   if (error) throw error;

  //   color.domain(d3.keys(data[0]).filter(function(key) { return key !== "date"; }));

  //   data.forEach(function(d) {
  //     d.date = parseDate(d.date);
  //   });

  //   var cities = color.domain().map(function(name) {
  //     return {
  //       name: name,
  //       values: data.map(function(d) {
  //         return {date: d.date, temperature: +d[name]};
  //       })
  //     };
  //   });

  //   x.domain(d3.extent(data, function(d) { return d.date; }));

  //   y.domain([
  //     d3.min(cities, function(c) { return d3.min(c.values, function(v) { return v.temperature; }); }),
  //     d3.max(cities, function(c) { return d3.max(c.values, function(v) { return v.temperature; }); })
  //   ]);

  //   svg.append("g")
  //       .attr("class", "x axis")
  //       .attr("transform", "translate(0," + height + ")")
  //       .call(xAxis);

  //   svg.append("g")
  //       .attr("class", "y axis")
  //       .call(yAxis)
  //     .append("text")
  //       .attr("transform", "rotate(-90)")
  //       .attr("y", 6)
  //       .attr("dy", ".71em")
  //       .style("text-anchor", "end")
  //       .text("Temperature (ºF)");

  //   var city = svg.selectAll(".city")
  //       .data(cities)
  //     .enter().append("g")
  //       .attr("class", "city");

  //   city.append("path")
  //       .attr("class", "line")
  //       .attr("d", function(d) { return line(d.values); })
  //       .style("stroke", function(d) { return color(d.name); });

  //   city.append("text")
  //       .datum(function(d) { return {name: d.name, value: d.values[d.values.length - 1]}; })
  //       .attr("transform", function(d) { return "translate(" + x(d.value.date) + "," + y(d.value.temperature) + ")"; })
  //       .attr("x", 3)
  //       .attr("dy", ".35em")
  //       .text(function(d) { return d.name; });
  // });
</script>
